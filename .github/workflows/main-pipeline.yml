# Nome do Workflow
name: Build and Deploy to K3s

# Gatilho: Executa sempre que houver um push na branch 'main'
on:
  push:
    branches:
      - main

env:
  # Define o nome da imagem para ser usado em ambos os jobs
  IMAGE_NAME: ${{ github.repository }}

jobs:
  #----------------------------------------------------
  # JOB 1: Construir a imagem Docker e enviar para o GHCR
  #----------------------------------------------------
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Permissão para escrever no GitHub Packages (ghcr.io)

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test # Constrói o app, pulando os testes

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

  #----------------------------------------------------
  # JOB 2: Fazer o deploy da imagem no Kubernetes
  #----------------------------------------------------
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Kubeconfig (com decode)
        run: |
          mkdir -p ~/.kube
          # Decodifica o secret Base64 e salva no arquivo de configuração
          echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 --decode > ~/.kube/config
          chmod 600 ~/.kube/config
        
      - name: Deploy to K3s
        run: |
          # Substitui a tag da imagem no arquivo de deployment
          echo "Atualizando a imagem para: ghcr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}"
          sed -i "s|image:.*|image: ghcr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}|g" k8s/deployment.yaml
          
          # Aplica os manifestos ao cluster
          kubectl apply -f k8s/
          
          echo "Verificando o status do deploy..."
          sleep 15
          kubectl get pods
          kubectl get services