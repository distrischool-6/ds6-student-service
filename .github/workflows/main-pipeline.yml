# Nome do Workflow
name: Build and Deploy to MicroK8s

# Gatilho: Executa sempre que houver um push na branch 'main'
on:
  push:
    branches:
      - main

env:
  # Define o nome da imagem para ser usado em ambos os jobs
  IMAGE_NAME: ${{ github.repository }}

jobs:
  #----------------------------------------------------
  # JOB 1: Construir a imagem Docker e enviar para o GHCR
  #----------------------------------------------------
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
          # Gera o output com o digest da imagem para o próximo job
          outputs: type=image,name=target,annotation-index.org.opencontainers.image.revision=${{ github.sha }}

    #----------------------------------------------------

    # JOB 2: Aplicar configurações e segredos no cluster

    #----------------------------------------------------

    apply-configs:

      name: "Deploy: Apply Configs & Secrets"

      needs: build-and-push

      runs-on: ubuntu-latest

  

      steps:

        - name: Checkout code

          uses: actions/checkout@v3

  

        - name: Install microk8s kubectl

          run: |

            sudo snap install microk8s --classic

            sudo microk8s status --wait-ready

            sudo microk8s.kubectl version --client

  

        - name: Set up Kubeconfig from Base64 secret

          run: |

            mkdir -p ~/.kube

            echo "${{ secrets.KUBE_CONFIG_B64 }}" | base64 -d > ~/.kube/config

            chmod 600 ~/.kube/config

  

        - name: Create/Update GHCR ImagePullSecret

          run: |

            sudo microk8s.kubectl create secret docker-registry ghcr-secret \

              --namespace=default \

              --docker-server=ghcr.io \

              --docker-username=${{ github.actor }} \

              --docker-password=${{ secrets.GHCR_TOKEN }} \

              --dry-run=client -o yaml | sudo microk8s.kubectl apply -f -

  

        - name: Apply Kubernetes manifests (ConfigMap and Service)

          run: |

            sudo microk8s.kubectl apply -f k8s/configmap.yaml -n default

            sudo microk8s.kubectl apply -f k8s/service.yaml -n default

  

    #----------------------------------------------------

    # JOB 3: Atualizar a imagem e verificar o deploy

    #----------------------------------------------------

    rollout-update:

      name: "Deploy: Rollout Image & Verify"

      needs: apply-configs

      runs-on: ubuntu-latest

  

      steps:

        - name: Install microk8s kubectl

          run: |

            sudo snap install microk8s --classic

            sudo microk8s status --wait-ready

            sudo microk8s.kubectl version --client

  

        - name: Set up Kubeconfig from Base64 secret

          run: |

            mkdir -p ~/.kube

            echo "${{ secrets.KUBE_CONFIG_B64 }}" | base64 -d > ~/.kube/config

            chmod 600 ~/.kube/config

  

        - name: Update deployment image

          run: |

            sudo microk8s.kubectl set image deployment/student-service student-service=ghcr.io/${{ env.IMAGE_NAME }}:${{ github.sha }} -n default

  

        - name: Verify deployment rollout

          run: |

            sudo microk8s.kubectl rollout status deployment/student-service -n default

  

        - name: Display pods status

          run: |

            echo "Deployment successful! Pods status:"

            sudo microk8s.kubectl get pods -n default

  